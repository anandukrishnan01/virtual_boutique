# Generated by Django 4.2 on 2024-05-16 11:45

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Vendor'), (2, 'Customer')], null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'accounts_user',
                'ordering': ('-date_joined', 'username'),
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('email_id', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_person_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('contact_person_phone', models.EmailField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('updated_status', models.PositiveSmallIntegerField(blank=True, choices=[(3, 'Basic Details Only'), (2, 'In Completed Profile'), (1, 'Completed Profile')], default=3, null=True)),
                ('country', django_countries.fields.CountryField(default='IN', max_length=2)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('company_logo', models.ImageField(upload_to='company_logos/')),
                ('vendor_license', models.ImageField(upload_to='vendor_licenses/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='register.user')),
            ],
        ),
    ]
